#!/bin/sh

### BEGIN INIT INFO
# Provides:          radiopi
# Required-Start:    $local_fs $remote_fs $network $syslog mpd
# Required-Stop:
# Should-Start:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts the python daemon for radiopi.
# Description:       The init.d script which start a python
#                    server for radiopi.
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
. /lib/init/vars.sh


APP_ROOT="/usr/local/src/radiopi"
PID_FILE="$APP_ROOT/radiopi.pid"

check_pid(){
  STATUS=0
  PID=0

  if test -f $PID_FILE && test ! -z `cat $PID_FILE`; then
    PID=`cat $PID_FILE`
    STATUS=`ps aux | grep $PID_FILE | grep -v grep | wc -l`
  fi
}

do_start () {
  check_pid
  if [ "$PID" -ne 0 ] && [ "$STATUS" -ne 0 ]; then
    echo "RadioPi is currently running!"
    exit 1
  else
    rm -f $PID_FILE # remove old pid file
    cd $APP_ROOT
    $APP_ROOT/env/bin/twistd -y service.tac --pidfile $PID_FILE
    echo "RadioPi has started"
  fi
}

do_stop() {
  check_pid
  if [ "$PID" -ne 0 ] && [ "$STATUS" -ne 0 ]; then
    ## Program is running, stop it.
    kill -9 `cat $PID_FILE`
    rm "$PID_FILE" >> /dev/null
    echo "RadioPi stopped"
  else
    ## Program is not running, exit with error.
    echo "Error! RadioPi not started!"
    exit 1
  fi
}

do_status () {
  check_pid
  if [ "$PID" -ne 0 ] && [ "$STATUS" -ne 0 ]; then
    echo "RadioPi with PID $PID is running."
  else
    echo "RadioPi is not running."
    exit 1
  fi
}

case "$1" in
  start)
        do_start
        ;;
  stop)
        do_stop
        ;;
  restart)
        do_stop
        do_start
        ;;
  status)
        do_status
        ;;
  *)
        echo "Usage: sudo service radiopi {start|stop|restart|status}" >&2
        exit 1
        ;;
esac

exit 0
